@model Fanfic.Models.ViewModels.CompositionViewModel
<!DOCTYPE html>
<html>
<head>
   
</head>
<body>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="EditComposition" asp-route-id="@Model.Id">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Genre" class="control-label"></label>
                    <select asp-for="Genre" class="form-control" asp-items="Html.GetEnumSelectList<Genre>()">
                        <option>@Model.Genre</option>
                    </select>
                    <span asp-validation-for="Genre" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Tags" class="control-label"></label>

                    <input asp-for="Tags" id="token" value="@string.Join(",", Model.Tags.Select(x => x.Name))" class="form-control" />
                    <span asp-validation-for="Tags" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>
    @section Scripts {
        <script>

            $(document).ready(function () {
                var token = [];
                $.get("/Composition/GetTag", function (response) {
                    $.each(response.data, function (i, v) {
                        token.push({ value: v });
                        console.log(v);

                    });

                    $('#token').tokenfield({
                        autocomplete: {
                            source: token,
                            focus: (function () {
                                $(this).autocomplete("search");
                            }),
                            delay: 40
                        },
                        showAutocompleteOnFocus: true
                    })
                });

            });

        </script>
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    }
</body>
</html>

